{
  "manifest": {
    "name": "@jupyterlab/ui-components",
    "version": "2.0.2",
    "description": "JupyterLab - UI components written in React",
    "homepage": "https://github.com/jupyterlab/jupyterlab",
    "bugs": {
      "url": "https://github.com/jupyterlab/jupyterlab/issues"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/jupyterlab/jupyterlab.git"
    },
    "license": "BSD-3-Clause",
    "author": {
      "name": "Project Jupyter"
    },
    "files": [
      "lib/**/*.{d.ts,eot,gif,html,jpg,js,js.map,json,png,svg,woff2,ttf}",
      "style/**/*.{css,eot,gif,html,jpg,json,png,svg,woff2,ttf}"
    ],
    "sideEffects": [
      "style/**/*"
    ],
    "main": "lib/index.js",
    "types": "lib/index.d.ts",
    "style": "style/index.css",
    "scripts": {
      "build": "tsc -b",
      "clean": "rimraf lib",
      "cleansvg": "svgo --config svgo.yaml",
      "docs": "typedoc src",
      "prepublishOnly": "npm run build",
      "storybook": "start-storybook -p 9001 -c .storybook",
      "watch": "tsc -b --watch"
    },
    "dependencies": {
      "@blueprintjs/core": "^3.22.2",
      "@blueprintjs/select": "^3.11.2",
      "@jupyterlab/coreutils": "^4.0.2",
      "@lumino/coreutils": "^1.4.2",
      "@lumino/signaling": "^1.3.5",
      "@lumino/virtualdom": "^1.6.1",
      "@lumino/widgets": "^1.11.1",
      "react": "~16.9.0",
      "react-dom": "~16.9.0",
      "typestyle": "^2.0.4"
    },
    "devDependencies": {
      "@babel/core": "^7.5.0",
      "@babel/preset-env": "^7.7.6",
      "@storybook/addon-actions": "^5.2.5",
      "@storybook/react": "^5.2.5",
      "@types/react": "~16.9.16",
      "@types/webpack-env": "^1.14.1",
      "awesome-typescript-loader": "^5.2.1",
      "babel-loader": "^8.0.6",
      "react-docgen-typescript-loader": "^3.3.0",
      "rimraf": "~3.0.0",
      "svgo": "^1.3.2",
      "typedoc": "^0.15.4",
      "typescript": "~3.7.3"
    },
    "peerDependencies": {
      "react": "~16.9.0"
    },
    "publishConfig": {
      "access": "public"
    },
    "jupyterlab": {
      "extraStyles": {
        "blueprintjs": [
          "icons/lib/css/blueprint-icons.css",
          "core/lib/css/blueprint.css"
        ]
      }
    },
    "gitHead": "621e371dc73091986d0b28a8d31b6288f54e561e",
    "_registry": "npm",
    "_loc": "/home/jovyan/.cache/yarn/v6/npm-@jupyterlab-ui-components-2.0.2-84a68bbb4fdca0d83ea2892fcf78a8a373716fa9-integrity/node_modules/@jupyterlab/ui-components/package.json",
    "readmeFilename": "README.md",
    "readme": "# @jupyterlab/ui-components\n\nA JupyterLab package that provides UI elements of various types (React components, DOM elements, etc) to core JupyterLab packages and third-party extensions.\n\n# `LabIcon` user guide\n\n`LabIcon` is the icon class used by JupyterLab, and is part of the new icon system introduced in JupyterLab v2.0.\n\n## How JupyterLab handles icons\n\nThe ui-components package provides icons to the rest of JupyterLab, in the form of a set of `LabIcon` instances (currently about 80). All of the icons in the core JupyterLab packages are rendered using one of these `LabIcon` instances.\n\n## Using the icons in your own code\n\nYou can use any of JupyterLab icons in your own code via an `import` statement. For example, to use `jupyterIcon` you would first do:\n\n```\nimport { jupyterIcon } from \"@jupyterlab/ui-components\";\n```\n\n## How to render an icon into a DOM node\n\nIcons can be added as children to any `div` or `span` nodes using the `icon.element(...)` method (where `icon` is any instance of `LabIcon`). For example, to render the Jupyter icon you could do:\n\n```\njupyterIcon.element({container: elem, height: '16px', width: '16px', marginLeft: '2px'});\n```\n\nwhere `elem` is any `HTMLElement` with a `div` or `span` tag. As shown in the above example, the icon can be styled by passing CSS parameters into `.element(...)`. Any valid CSS parameter can be used (one catch: snake case params do have to be converted to camel case: instead of `foo-bar: '8px'`, you'd need to use `fooBar: '8px'`.\n\n## How to render an icon as a React component\n\nIcons can also be rendered using React. The `icon.react` parameter holds a standard React component that will display the icon on render. Like any React component, `icon.react` can be used in various ways.\n\nFor example, here is how you would add the Jupyter icon to the render tree of another React component:\n\n```\n  public render() {\n    return (\n      <div className=\"outer\">\n        <div className=\"inner\">\n          <jupyterIcon.react tag=\"span\" right=\"7px\" top=\"5px\" />\n          \"and here's a text node\"\n        </div>\n      </div>\n    );\n  }\n```\n\nAlternatively, you can just render the icon directly into any existing DOM node `elem` by using the `ReactDOM` module:\n\n```\nReactDOM.render(jupyterIcon.react, elem);\n```\n\nIf do you use `ReactDOM` to render, and if the `elem` node is ever removed from the DOM, you'll first need to clean it up:\n\n```\nReactDOM.unmountComponentAtNode(elem);\n```\n\nThis cleanup step is not a special property of `LabIcon`, but is instead needed for any React component that is rendered directly at the top level by `ReactDOM`: failure to call `unmountComponentAtNode` can result in a [memory leak](https://stackoverflow.com/a/48198011/425458).\n",
    "licenseText": "Copyright (c) 2015 Project Jupyter Contributors\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nSemver File License\n===================\n\nThe semver.py file is from https://github.com/podhmo/python-semver\nwhich is licensed under the \"MIT\" license.  See the semver.py file for details.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@jupyterlab/ui-components/-/ui-components-2.0.2.tgz#84a68bbb4fdca0d83ea2892fcf78a8a373716fa9",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@jupyterlab/ui-components/-/ui-components-2.0.2.tgz",
    "hash": "84a68bbb4fdca0d83ea2892fcf78a8a373716fa9",
    "integrity": "sha512-yQ/M3ZtA/Zo8qsvvcwe17qdeTE7xZ6U5l5M/6OVvxIMKR0qXnqSpv8w7jJAgbRusr29Dj8tHbdrEMFethlfwUg==",
    "registry": "npm",
    "packageName": "@jupyterlab/ui-components",
    "cacheIntegrity": "sha512-yQ/M3ZtA/Zo8qsvvcwe17qdeTE7xZ6U5l5M/6OVvxIMKR0qXnqSpv8w7jJAgbRusr29Dj8tHbdrEMFethlfwUg== sha1-hKaLu0/coNg+ookvz3ioo3Nxb6k="
  },
  "registry": "npm",
  "hash": "84a68bbb4fdca0d83ea2892fcf78a8a373716fa9"
}